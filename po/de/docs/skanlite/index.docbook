<?xml version="1.0" ?>
<!DOCTYPE book PUBLIC "-//KDE//DTD DocBook XML V4.5-Based Variant V1.1//EN" "dtd/kdedbx45.dtd" [
  <!ENTITY % addindex "IGNORE">
  <!ENTITY % English "INCLUDE"><!-- change language only here -->
]>

<book id="skanlite" lang="&language;">

<bookinfo>
<title>The &skanlite; Handbook</title>

<authorgroup>
<author>
<firstname>K책re</firstname>
<surname>S채rs</surname>
<affiliation>
<address><email>kare dot sars at iki dot fi</email></address>
</affiliation>
</author>
<author>
<firstname>Anne-Marie</firstname>
<surname>Mahfouf</surname>
<affiliation>
<address>&Anne-Marie.Mahfouf.mail;</address>
</affiliation>
</author>
<!-- TRANS:ROLES_OF_TRANSLATORS -->
</authorgroup>

<copyright>
<year>2008, 2013</year>
<holder>K책re S채rs</holder>
</copyright>
<copyright>
<year>2008</year>
<holder>&Anne-Marie.Mahfouf;</holder>
</copyright>

<legalnotice>&FDLNotice;</legalnotice>

<date>2016-08-24</date>
<releaseinfo>&skanlite; 2.0.0</releaseinfo>

<abstract>
<para>
&skanlite; is an image scanning application that does nothing more than scan and save images.
</para>
<para>&skanlite; is based on libksane, a &kde; interface for SANE library to control image scanners.</para>
</abstract>

<keywordset>
<keyword>KDE</keyword>
<keyword>kdegraphics</keyword>
<keyword>scanner</keyword>
<keyword>images</keyword>
</keywordset>

</bookinfo>

<chapter id="introduction">
<title>Introduction</title>
<para>&skanlite; is a simple image scanning application that does nothing more than scan and save images. &skanlite; can open a save dialog for every image scanned or save the images immediately in a specified folder with auto-generated names and format. The user can also choose to show the scanned image before saving.</para>
<para>
&skanlite; can save images in all the formats supported by &Qt;. For example the following formats:
<itemizedlist>
<listitem><para>
png (8 and 16 bits per color)
</para></listitem>
<listitem><para>
jpeg, jpg, jpeg 2000
</para></listitem>
<listitem><para>
bmp
</para></listitem>
</itemizedlist>
</para>

<note><para>You can check the status of your scanner support from the SANE project website through the <ulink url="http://www.sane-project.org/sane-supported-devices.html">Supported Devices page on the SANE website</ulink>.</para></note>

</chapter>

<chapter id="using-skanlite">
<title>Using &skanlite;</title>

<sect1 id="scanner-selection">
<title>Scanner Selection</title>
<para>A default scanner can be specified on the command line of &skanlite; using <userinput>skanlite -d [device name]</userinput> in a terminal. If the selected scanner cannot be opened or if no default scanner is provided, a scanner selection dialog is opened.
</para>

<screenshot>
     <screeninfo>&skanlite; scanner selection dialog</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="choose-scanner.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>&skanlite; scanner selection dialog</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
The user can choose the scanner to be used and press <guibutton>OK</guibutton> to open the scanner. Pressing <guibutton>Cancel</guibutton> will cause &skanlite; to exit.
</para>

<screenshot>
     <screeninfo>No scanner found</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="no-scanner-found.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>No scanner found</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
In case no devices were found, maybe because the scanner is not plugged in or 
switched off, correct that. Then the <guibutton>Reload device list</guibutton> 
can be used to reload the list of scanners.</para> 
<note><para>Not all drivers/backends support this feature. In that case quit &skanlite;, 
connect your scanner and restart the application.</para>
</note>

</sect1>
</chapter>

<chapter id="main-window">
<title>&skanlite; Main Window</title>
<screenshot>
     <screeninfo>&skanlite; main window</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="main-window.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>&skanlite; main window</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
In the main window, the user has two sets of scan options: <guilabel>Basic Options</guilabel> and <guilabel>Scanner Specific Options</guilabel>. The <guilabel>Basic Options</guilabel> tab contains the most common parameters that the SANE scanner backends provide, while the <guilabel>Scanner Specific Options</guilabel> tab contains all the options of the backend. The options listed here depend on SANE support for your driver: libksane (which &skanlite; uses) should be able to display most of the types of parameters that SANE provides (analog gamma tables are not supported at this time).
</para>

<screenshot>
     <screeninfo>Scanner Specific Options tab</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="other-options.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Scanner Specific Options tab</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
The scanner specific options contains more detailed options of the backends. &skanlite; (libksane) does not have any special handling for these options.
</para>

<para>If you are satisfied with your settings, you can use the little arrow on the top of the options splitter. 
When clicked it collapses or expands the options. The collapser can overlap the preview area, but fades
away when the mouse cursor moves out of the collapser.</para>  

<sect1 id="scanning">
<title>Scanning</title>
<para>
To scan an image, the user can start with a preview scan and then select the part of the scan area to do the final scan on. The preview scan is started by pressing the preview button. 
</para>

<screenshot>
     <screeninfo>The Preview Button</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="preview-button.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>The Preview Button</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
When the preview is scanned the area for the final image can be selected.
</para>
<screenshot>
     <screeninfo>Selection and zoom</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="zoom-in.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Selection and zoom</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
<para>
To better select the image the user can zoom in, out, to the current selection or zoom to fit the whole preview to the window.
</para>
<screenshot>
     <screeninfo>The "zoom to fit" button</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="zoom-to-fit.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>The "zoom to fit" button</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
When the image is selected the  final image can be acquired by pressing the final scan button.
</para>

<screenshot>
     <screeninfo>The final scan button</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="final-button.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>The final scan button</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
You will see the progress of the scan.
</para>
<screenshot>
     <screeninfo>Scanning in progress</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="scanning.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Scanning in progress</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>
If <guilabel>Preview before saving</guilabel> is selected in the settings, the scanned image is displayed in a preview window as you can see below on the screenshot. If <guibutton>Save</guibutton> is pressed, the image is saved and if <guibutton>Discard</guibutton> is pressed the preview is discarded and you return to the main window.
</para>
<screenshot>
     <screeninfo>The Preview Window</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="preview.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>The Preview Window</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
</sect1>

<sect1 id="scanning-multiple-selections">
<title>Scanning Multiple Selections</title>
<para>
Sometimes you need only certain parts of an image.
Instead of scanning the whole picture and then using a graphics
application (&eg; &kolourpaint;) to save the different image parts into separate
files, use &skanlite;'s  multiple selection feature.
</para>
<screenshot>
     <screeninfo>Multiple Selections</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="multiple-selections.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>Multiple Selections</phrase>
	  </textobject>
	</mediaobject>
</screenshot>
<para>Scan a preview and then use the &LMB; to select the first part of the image in the preview.
Hover the selected area with mouse cursor and click on the green <guiicon>+</guiicon> icon
to select the area.  Selected areas are indicated by a red border.
Now select the next parts of the image in the same way.</para>
<para>To remove a single selection hover the area with the mouse cursor and click on the red
<guiicon>-</guiicon> icon. With <guilabel>Clear Selections</guilabel> from the context menu launched with the
&RMB; all selections in a preview can be removed.
</para>
<para>If you placed two separate images or photos on you scanner and started a preview 
&skanlite; automatically preselect the different areas. This behaviour can be switched off in the settings dialog.
</para>
<para>If you are satisfied with your choice starting the final batch scan of all selections. The images are saved
using the batch renaming feature described in the settings dialog.
</para>
</sect1>

<sect1 id="settings">
<title>&skanlite; settings</title>
<para>
By clicking the <guibutton>Settings</guibutton> button, the settings dialog is brought up before the main window. You can choose the most important settings here.
</para>

<screenshot>
    <screeninfo>Here's a screenshot of &skanlite; settings dialog</screeninfo>
    <mediaobject>
        <imageobject>
            <imagedata fileref="settings.png" format="PNG"/>
        </imageobject>
        <textobject>
            <phrase>&skanlite; settings dialog</phrase>
        </textobject>
    </mediaobject>
</screenshot>

<para><variablelist>
<varlistentry>
<term><guilabel>Preview before saving:</guilabel></term>
<listitem><para>The user can chose to preview the image before saving. In this case the <guilabel>Preview before saving</guilabel> option can be left checked. If the user does not want to preview the image this option should then be unchecked.
</para></listitem>
</varlistentry>
<varlistentry>
<term><guilabel>Save Mode:</guilabel></term>
<listitem>
<para> This setting allows you to choose how &skanlite; will save the images. If you choose <guilabel>Open the save dialog for every image</guilabel> the save dialog will be opened for every scanned image. If you prefer &skanlite; to auto-save (by auto-generating a name and saving the image in a predefined folder) you can choose <guilabel>Open the save dialog for the first image only</guilabel>. This option will open the following "Save Location" dialog for the first scanned image.</para>
<para>
    <screenshot>
        <screeninfo>Here's a screenshot of &skanlite; save location dialog</screeninfo>
        <mediaobject>
            <imageobject>
                <imagedata fileref="save-location.png" format="PNG"/>
            </imageobject>
            <textobject>
                <phrase>&skanlite; Save Location dialog.</phrase>
            </textobject>
        </mediaobject>
    </screenshot>
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Save Location:</guilabel></term>
<listitem><para> This setting defines the default save location and file naming. The default save location is your home folder and you can change this location by clicking on the <guibutton>...</guibutton> button.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Name Format:</guilabel></term>
<listitem><para> This parameter defines the image prefix for the auto-saved images and is also the suggested name for the image in the save dialog. The auto-saved image will have a numeric suffix (the ### will be replaced by numbers) that is increased every time an image is saved.
</para><para>You can also choose the save format of the file, default is png.</para>
</listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Specify save quality:</guilabel></term>
<listitem><para>The user can chose to specify the image quality to be used for saving the images. The image quality setting affects the compression level used for saving. If <guilabel>Specify save quality</guilabel> is not checked, the quality is the default value chosen by &Qt;.
</para></listitem>
</varlistentry>

<varlistentry>
<term><guilabel>Set preview resolution (DPI)</guilabel></term>
<listitem><para>&skanlite; is using heuristics to try to get a sane resolution, 
but if that fails and the resolution is too high or low, then the preview 
resolution can be manually set with this option.
</para></listitem>
</varlistentry>
<varlistentry>
<term><guilabel>Disable automatic selections</guilabel></term>
<listitem><para>By default automatic selections are enabled; and after a preview, 
libksane does try to automatically select the images in the preview and should
batch scan the selected areas. &eg; if you place two photos 
on the scanner and do a preview, &skanlite; will automatically add 
selections of the photos.</para>
<para>If on the other hand you are usually scanning documents it might be that the 
automatic selection will select a lot of different parts in the documents and 
you have to manually remove the selections. To avoid that tick the checkbox and
disable automatic selection.
</para>
</listitem>
</varlistentry>
<varlistentry>
<term><guilabel>Revert scanner options to default values</guilabel></term>
<listitem><para>
The last used settings are reloaded on startup. If you have screwed up the options 
(for example if you have changed the color correction settings, available
in some backends, without knowing what they mean), the image can start to look very odd. 
For that scenario this option provides a way to revert the setting to the default values, 
which are a combination of backend and libksane defaults.
</para></listitem>
</varlistentry>
</variablelist></para>
</sect1>

<sect1 id="help">
<title>Help, About, Settings and Close</title>
<para>
At the bottom of the main window you find the <guibutton>Help</guibutton>, <guibutton>About</guibutton>, <guibutton>Settings</guibutton> and <guibutton>Close</guibutton> buttons.</para>

<screenshot>
     <screeninfo>The Main Window Buttons</screeninfo>
	<mediaobject>
	  <imageobject>
	    <imagedata fileref="buttons-main.png" format="PNG"/>
	  </imageobject>
	    <textobject>
	    <phrase>The Main Window Buttons</phrase>
	  </textobject>
	</mediaobject>
</screenshot>

<para>The <guibutton>Help</guibutton> button brings up the &kde; Help center with the &skanlite; manual. The <guibutton>About</guibutton> button brings up the &kde; About dialog for &skanlite;. The <guibutton>Settings</guibutton> button displays the settings dialog and the <guibutton>Close</guibutton> button is used to exit &skanlite;.</para>
</sect1>
</chapter>

<chapter id="credits">

<title>Credits and License</title>
<para>
&skanlite;
</para>
<para>
Program copyright 2007 K책re S채rs <email>kare dot sars at iki dot fi</email>
</para>
<para>
Contributors:
<itemizedlist>
<listitem><para>Author: K책re S채rs <email>kare dot sars at iki dot fi</email></para>
</listitem>
</itemizedlist>
</para>

<!-- TRANS:CREDIT_FOR_TRANSLATORS -->

&underFDL;
<para>
&skanlite; is licensed under the GPL and the libksane library, used by &skanlite;,  is licensed under the LGPL. Note: libsane is licensed under GPL with an exception.
</para>
</chapter>

&documentation.index;
</book>
<!--
Local Variables:
mode: sgml
sgml-minimize-attributes:nil
sgml-general-insert-case:lower
sgml-indent-step:0
sgml-indent-data:nil
End:
-->
